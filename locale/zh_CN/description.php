<?php
/** -------------------------------------------------------------------------------------
 * ♔ TestLink Open Source Project - http://testlink.sourceforge.net/
 * 
 * Filename $RCSfile: description.php,v $
 * @version $Revision: 1.4 $
 * @modified $Date: 2010/06/24 17:25:53 $ $Author: asimon83 $
 * @modified $Date: 2010/06/24 17:25:53 $ $Author: asimon83 $
 * @modified $Date: 2010/06/24 17:25:53 $ $Author: asimon83 $
 * @author Martin Havlat
 *
 * LOCALIZATION:
 * === English (en_GB) strings === - default development localization (World-wide English)
 *
 * @ABSTRACT
 * The file contains global variables with html text. These variables are used as 
 * HELP or DESCRIPTION. To avoid override of other globals we are using "Test Link String" 
 * prefix '$TLS_hlp_' or '$TLS_txt_'. This must be a reserved prefix.
 * 
 * Contributors:
 * Add your localization to TestLink tracker as attachment to update the next release
 * for your language.
 *
 * No revision is stored for the the file - see CVS history
 * The initial data are based on help files stored in gui/help/<lang>/ directory. 
 * This directory is obsolete now. It serves as source for localization contributors only. 
 *
 * ----------------------------------------------------------------------------------- */

// printFilter.html //已校对
$TLS_hlp_generateDocOptions = "<h2>根据选项生成的文档</h2>

<p>该列表允许用户在浏览测试用例之前对其进行过滤。
通过筛选可以显示你所需要的数据。为了改变显示的数据，
你可以选择或者取消选择条件，点击过滤器，并在树上选择希望的数据等级。</p>

<p><b>文档头部：</b>用户可以过滤文档的头部信息。
文档的头部信息包括：介绍，范围，参考，测试方法和测试规范。</p>

<p><b>测试用例的内容：</b>用户可以过滤测试用例的内容。测试用例的内容包括：
摘要，步骤，预期结果和关键字。</p>

<p><b>测试用例摘要：</b>通过测试用例的标题，用户可以过滤测试用例摘要的信息。
但是，用户不能通过测试用例的内容过滤测试用例摘要信息。
为了在浏览标题时显示摘要信息和遗漏的步骤，预期结果和关键字，我们把测试摘要从测试用例内容中单独分离出来。
当用户浏览测试用例的时候，测试用例摘要会被自动包含进来供浏览。</p>

<p><b>表中的内容：</b>TestLink通过内部超连接插入所有标题</p>

<p><b>导出格式：</b>共有两种格式：HTML和MS word。在第二种情况下，浏览器会自动调用MS word组件。</p>";

// testPlan.html //已校对
$TLS_hlp_testObj =
 "
<h2>测试项目管理</h2>	
<br>
<p>测试项目用来统一管理项目下的测试计划，只有admin角色会有项目管理的权限</p>
"; 
$TLS_hlp_testPlan =
"
<h2>测试计划管理</h2>
<br>
<p>测试计划是开展一个测试项目的发起点，只有制定好了测试计划，我们才可以开始正式的进行测试执行</p>
";
$TLS_hlp_customFields = "<h2>测试版本管理</h2>
<br>
<p>一个版本相当于计划下的一轮测试，当项目需要进行多轮测试的时候，就需要创建多个版本进行区分。一个计划创建完成后默认创建五个版本：</p>
<ul>
<li>开发自测：用于开发进行的冒烟测试</li>
<li>冒烟测试：用于主要功能的初测</li>
<li>功能测试：全面覆盖所有功能点的测试</li>
<li>场景测试：不同场景的测试</li>
<li>回归测试：用于最后的验收测试</li>
</ul>
";
$TLS_hlp_testsuite =
"
<h2>测试用例管理</h2>
<br>
<p>测试用例管理负责用例的增删改查，是一个测试项目下的所有用例的汇总，方便统一管理</p>
";
$TLS_hlp_testreport =
"
<h2>测试报告管理</h2>
<br>
<p>测试报告管理负责测试执行结果的汇总数据统计，主要是对测试执行情况的反馈，可以自由的选择不同的统计数据查看</p>
";
$TLS_hlp_planAddTC =
"
<h2>添加测试用例到测试计划</h2>
<br>
<p>首先需要将需要执行的所有测试用例全部添加到这个测试计划中，然后才能完成测试用例的分配管理</p>
";
$TLS_hlp_tc_exec_assignment =
"
<h2>指派执行测试用例</h2>
<br>
<p>将测试计划下的用例再次进行分配，根据每一轮测试版本不同的测试需求，分配不同的测试用例进行测试执行，例如：</p>
<ul>
<li>将主流程优先级高的测试用例分配给开发自测和冒烟测试，完成主要功能的快速测试；</li>
<li>将项目所有的测试用例分配给功能测试，完成完整的测试；</li>
<li>将部分出现问题的用例和主流程的用例分配给回归测试，完成最后的验收；</li>
<ul>		
";
// custom_fields.html //已校对


// execMain.html  //已校对
$TLS_hlp_executeMain = "<h2>执行测试用例</h2>
<p>允许用户执行测试用例。执行本身只是一个对选择的构建的测试用例分配结果（通过，失败，锁定）的过程</p>
<p>通过配置可以关联到缺陷跟踪系统。用户可以直接新建问题和浏览已经存在的问题。更多信息请查看安装手册。</p>";

//bug_add.html //已校对
$TLS_hlp_btsIntegration = "<h2>给测试用例添加问题</h2>
<p><i>(仅在已经配置好的情况下)</i>
TestLink 仅仅简单地跟缺陷跟踪系统（BTS）进行了集成，即不能向BTS发送创建bug的请求，也不能取回bug id号。
该集成仅仅与BTS建立了一个页面连接，调用以下功能：
<ul>
	<li>添加新问题</li>
	<li>显示已存在问题的信息 </li>
</ul>
</p>  

<h2>添加问题的过程</h2>
<p>
   <ul>
   <li>第一步: 点击连接打开BTS，添加一个新的问题</li>
   <li>第二步: 记下BTS指定的BUGID</li>
   <li>第三步: 将BUGID写入输入框中</li>
   <li>第四步: 点击添加问题按钮</li>
   </ul>  

关闭添加问题页面后，你将在执行页面上看见一个问题数据的关联信息。
</p>";

// execFilter.html  //已校对
$TLS_hlp_executeFilter = "<h2>设置过滤器并构建测试的实施</h2>

<p>左方框中包含指派给当前项目测试计划的测试用例的导航,左方框的列表包含了测试用例筛选的过滤器。" .
"这些过滤器允许用户提炼出的一组测试用例，然后去执行。" .
"设置好过滤器，然后点击 \"应用\" 按钮并从树形菜单中选择适当的测试用例 " .
"</p>

<h2>构建</h2>
<p>用户必须选择一个用来和测试结果建立连接的构建。" .
"构建是当前测试计划的基本组件。在每个构建中每一个测试用例都可能被执行多次。" .
"然而统计时只计入最终的执行结果。 
<br />项目负责人可以在新建构建页面创建构建。</p>

<h2>测试用例ID过滤器</h2>
<p>用户可以过滤测试用例通过唯一的标识符。该ID在创建测试用例的时候自动生成。 
空列表意味着还没有应用过滤器。</p> 

<h2>优先级过滤器</h2>
<p>用户可以通过优先级来过滤测试用例。每个测试用例的重要性还与该测试用例在当前测试计划里的紧急程度有关。" .
"例如'HIGH'优先级的测试用例会显示那些如果重要程度是HIGH，在测试计划中的紧急程度至少是MEDIUM级别的测试用例。</p> 

<h2>结果过滤器</h2>
<p>用户可以通过测试结果过滤测试用例。测试结果是测试用例基于某一构建的产物。测试用例的状态包括通过，失败，锁定或者尚未运行。" .
"该过滤器默认情况下是禁用的。</p>

<h2>用户过滤器</h2>
<p>用户可以根据测试用例的指派者来过滤测试用例。复选框允许包含\"未指派\"的选项。</p>";
/*
<h2>当前结果</h2>
<p>默认情况下或者没有选择复选框里的"most  current"选项时，树形目录将按照下拉选择框里选择的构建排序。
这时树形目录将显示测试用例的状态。<br />
例如：用户从下来选择框里选择构建2而且没有选择复选框里的"most current"。
所有测试用例会显示它们在构建2里的执行状态。 
因此，如果测试用例1在构建2里执行通过的情况下，它会显示为绿色。
<br />如果用户选择了复选框里的"most current"，那么树形目录里的测试用例将根据他们最新的执行结果显示相应的颜色。
<br />例如：如果用户选择了构建2而且选择了复选框里的"most current"，那么所有的测试用例将根据他们最近的状态显示。
因此，如果测试用例1在构建3里通过，即使用户选择了构建2，它也会显示为绿色。</p>
 */


// newest_tcversions.html //已校对
$TLS_hlp_planTcModified = "<h2>被关联测试用例的最新版本</h2>
<p>通过分析与测试计划关联的所有测试用例，那些有最新版本的测试用例将被罗列出来（相对应于当前测试计划的测试用例）
</p>";


// requirementsCoverage.html //已校对
$TLS_hlp_requirementsCoverage = "<h2>需求覆盖</h2>
<br />
<p>这个功能允许通过测试用例来映射对用户或系统需求的覆盖度。
通过主页的\"需求规格\" 可以进行导航。</p>

<h2>需求规格</h2>
<p>需求是根据测试项目中相关联的'需求规约'文档来组织的。<br />
TestLink 不支持即包含需求规约又包含需求的版本。
因此，只有创建好规约之后才能往里添加需求文档版本。 
<b>标题</b>.
用户于可以向<b>范围</b>中添加简单的描述或注释。</p> 

<p><b><a name='total_count'>需求覆盖数目</a></b>用来评估需求覆盖度如果并没有把所有的需求添加(导入)到TestLink的情况下。 
需求覆盖数目的值<b>0</b> 指的是当前被用来做结果分析的需求数量。</p> 
<p><i>例如 SRS 包含200个需求，但是仅有50个被添加到TestLink。测试覆盖度为25%（如果这些被添加的需求都将被测试）。 
</i></p>

<h2><a name=\"req\">需求</a></h2>
<p>点击需求规约的标题，你就可以创建，编辑，删除和导入需求文档。每个需求都有标题，范围和状态。
状态包括 \"有效的\" 和 \"不可测试的\". 不可测试的需求不会被统计度量。
该参数用于没有实现的功能和错误的设计需求。</p> 

<p>你可以在需求规约页面通过多种查看需求的途径为需求创建新的测试用例。
这些测试用例被包含在通过配置命名的测试套件里。<i>(默认是: &#36;tlCfg->req_cfg->default_testsuite_name = 
\"通过需求创建测试套件 - 自动\";)</i>. 标题和范围被复制到这些测试用例。</p>
";




// xxx.html
//$TLS_hlp_xxx = "";

// ----- END ------------------------------------------------------------------
?>
